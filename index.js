const express = require("express");
const app = express();
const PORT = 5000;

app.use(express.json());

// Liste des t√¢ches avec 4 descriptions par d√©faut
let tasks = [
    { id: 1, description: "Faire la magazine" },
    { id: 2, description: "savoir parler" },
    { id: 3, description: "Faire le compte" },
    { id: 4, description: " Faire le point" }
];
let idCounter = 5;

// üîπ Lire toutes les descriptions des t√¢ches
app.get("/tasks", (req, res) => res.json(tasks.map(task => task.description)));

// üîπ R√©cup√©rer une t√¢che sp√©cifique par ID
app.get("/tasks/:id", (req, res) => {
    const task = tasks.find(t => t.id === parseInt(req.params.id));
    if (!task) return res.status(404).json({ message: "T√¢che non trouv√©e" });
    res.json(task);
});

// üîπ Ajouter une nouvelle t√¢che (description uniquement)
app.post("/tasks", (req, res) => {
    const { description } = req.body;
    if (!description) return res.status(400).json({ message: "La description est obligatoire" });

    const newTask = { id: idCounter++, description };
    tasks.push(newTask);
    res.status(201).json(newTask);
});

// üîπ Modifier la description d'une t√¢che existante
app.put("/tasks/:id", (req, res) => {
    const task = tasks.find(t => t.id === parseInt(req.params.id));
    if (!task) return res.status(404).json({ message: "T√¢che non trouv√©e" });

    task.description = req.body.description || task.description;
    res.json(task);
});

// üîπ Supprimer une t√¢che
app.delete("/tasks/:id", (req, res) => {
    tasks = tasks.filter(t => t.id !== parseInt(req.params.id));
    res.json({ message: "T√¢che supprim√©e" });
});

// Lancer le serveur
app.listen(PORT, () => console.log(` Serveur d√©marr√© sur http://localhost:${PORT}`));



